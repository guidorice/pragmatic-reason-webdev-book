// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var DisplayList$Recursion = require("./DisplayList.bs.js");

var data = /* :: */[
  2,
  /* :: */[
    6,
    /* :: */[
      42,
      /* :: */[
        5,
        /* :: */[
          7,
          /* :: */[
            20,
            /* :: */[
              3,
              /* [] */0
            ]
          ]
        ]
      ]
    ]
  ]
];

function isEven(n) {
  return n % 2 === 0;
}

function takeWhile(l, f) {
  var _acc = /* [] */0;
  var _processList = l;
  while(true) {
    var processList = _processList;
    var acc = _acc;
    if (processList) {
      var a = processList[0];
      if (Curry._1(f, a)) {
        _processList = processList[1];
        _acc = /* :: */[
          a,
          acc
        ];
        continue ;
      } else {
        return Belt_List.reverse(acc);
      }
    } else {
      return Belt_List.reverse(acc);
    }
  };
}

function dropWhile(l, f) {
  var _li = l;
  while(true) {
    var li = _li;
    if (li && Curry._1(f, li[0])) {
      _li = li[1];
      continue ;
    } else {
      return li;
    }
  };
}

var taken = takeWhile(data, isEven);

console.log("taken: ", DisplayList$Recursion.stringOfList(taken, (function (prim) {
            return String(prim);
          })));

var dropped = dropWhile(data, isEven);

console.log("dropped: ", DisplayList$Recursion.stringOfList(dropped, (function (prim) {
            return String(prim);
          })));

exports.data = data;
exports.isEven = isEven;
exports.takeWhile = takeWhile;
exports.dropWhile = dropWhile;
exports.taken = taken;
exports.dropped = dropped;
/* taken Not a pure module */
